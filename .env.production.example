# 矿区安全数据库前端 - 生产环境配置模板
# 复制此文件为 .env.production 并填入实际配置值
# 
# 注意: 
# 1. 此文件用于Docker镜像部署，不包含构建时变量
# 2. 构建时变量在CI/CD流程中通过build-args传递
# 3. 敏感信息请从环境变量或密钥管理系统获取

# ================================
# Docker镜像配置
# ================================

# Docker镜像完整名称（由server-update.sh自动设置）
DOCKER_IMAGE=ghcr.io/your-org/mining-safety-db-frontend:latest

# Docker Compose项目名称
COMPOSE_PROJECT_NAME=mining-safety-db

# 系统时区
TZ=Asia/Shanghai

# ================================
# 服务端口配置
# ================================

# 前端服务端口
FRONTEND_PORT=80

# HTTP/HTTPS端口（负载均衡器使用）
HTTP_PORT=80
HTTPS_PORT=443

# ================================
# 监控和观测性
# ================================

# Prometheus指标端口
METRICS_PORT=9113

# Prometheus Web界面端口
PROMETHEUS_PORT=9090

# Grafana仪表板端口
GRAFANA_PORT=3001

# Grafana管理员用户
GRAFANA_USER=admin
GRAFANA_PASSWORD=change-this-password

# ================================
# 日志配置
# ================================

# 日志级别 (error, warn, info, debug)
LOG_LEVEL=info

# 日志格式 (json, text)
LOG_FORMAT=json

# 是否启用访问日志
ACCESS_LOG_ENABLED=true

# ================================
# 网络配置
# ================================

# 前端网络子网
FRONTEND_NETWORK_SUBNET=172.20.0.0/16
FRONTEND_NETWORK_GATEWAY=172.20.0.1

# 域名配置（Traefik使用）
FRONTEND_DOMAIN=mining-frontend.yourdomain.com

# SSL证书解析器
SSL_CERT_RESOLVER=letsencrypt

# ================================
# 资源限制
# ================================

# CPU限制（核心数）
CPU_LIMIT=0.5
CPU_RESERVATION=0.25

# 内存限制（MB）
MEMORY_LIMIT=256
MEMORY_RESERVATION=128

# ================================
# 构建信息（由脚本自动设置）
# ================================

# 镜像版本标签
BUILD_VERSION=latest

# 构建时间戳
BUILD_DATE=

# Git提交哈希
VCS_REF=

# ================================
# GitHub Container Registry
# ================================

# GitHub仓库所有者（组织或用户名）
GITHUB_REPOSITORY_OWNER=your-org

# GitHub仓库名称
GITHUB_REPOSITORY=mining-safety-db-frontend

# GitHub Personal Access Token（用于拉取私有镜像）
# 权限需要: read:packages
# GITHUB_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# GitHub用户名
# GITHUB_USERNAME=your-username

# ================================
# 安全配置
# ================================

# 是否启用安全头
SECURITY_HEADERS_ENABLED=true

# 是否强制HTTPS
FORCE_HTTPS=false

# HSTS最大年龄（秒）
HSTS_MAX_AGE=31536000

# ================================
# 性能优化
# ================================

# Nginx工作进程数
NGINX_WORKER_PROCESSES=auto

# Nginx工作连接数
NGINX_WORKER_CONNECTIONS=1024

# 是否启用Gzip压缩
GZIP_ENABLED=true

# Gzip压缩级别 (1-9)
GZIP_COMP_LEVEL=6

# ================================
# 高可用配置
# ================================

# 服务副本数量
REPLICA_COUNT=2

# 更新策略并行度
UPDATE_PARALLELISM=1

# 更新延迟（秒）
UPDATE_DELAY=10

# 故障操作 (rollback, pause)
UPDATE_FAILURE_ACTION=rollback

# 监控期间（秒）
UPDATE_MONITOR_PERIOD=60

# 最大故障率
UPDATE_MAX_FAILURE_RATIO=0.1

# ================================
# 健康检查配置
# ================================

# 健康检查间隔（秒）
HEALTHCHECK_INTERVAL=30

# 健康检查超时（秒）
HEALTHCHECK_TIMEOUT=10

# 健康检查重试次数
HEALTHCHECK_RETRIES=3

# 健康检查启动等待期（秒）
HEALTHCHECK_START_PERIOD=40

# ================================
# 备份配置
# ================================

# 是否启用自动备份
AUTO_BACKUP_ENABLED=true

# 备份保留天数
BACKUP_RETENTION_DAYS=7

# 备份存储路径
BACKUP_PATH=./backups

# ================================
# 开发/调试配置（生产环境建议关闭）
# ================================

# 是否启用调试模式
DEBUG_MODE=false

# 是否启用性能分析
PROFILING_ENABLED=false

# 是否在容器内保留源代码（方便调试）
KEEP_SOURCE_CODE=false

# ================================
# 第三方服务集成
# ================================

# 错误监控服务（如Sentry）
# SENTRY_DSN=https://xxxxx@sentry.io/xxxxx

# 性能监控服务（如New Relic）
# NEW_RELIC_LICENSE_KEY=xxxxx
# NEW_RELIC_APP_NAME=mining-safety-db-frontend

# 日志聚合服务（如ELK Stack）
# ELASTICSEARCH_URL=http://elasticsearch:9200
# LOGSTASH_HOST=logstash
# LOGSTASH_PORT=5000