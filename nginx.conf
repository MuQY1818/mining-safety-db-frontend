# 矿区安全数据库前端 - Nginx主配置文件
# 优化生产环境性能和安全性

# 运行用户
user nginx;

# 自动设置worker进程数
worker_processes auto;

# 错误日志
error_log /var/log/nginx/error.log warn;

# 进程文件
pid /var/run/nginx.pid;

# ================================
# 事件配置
# ================================
events {
    # 每个worker进程的最大连接数
    worker_connections 1024;
    
    # 使用epoll事件模型（Linux优化）
    use epoll;
    
    # 允许一次接受多个新连接
    multi_accept on;
}

# ================================
# HTTP配置
# ================================
http {
    # MIME类型配置
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 日志格式定义
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';
                    
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '$request_time $upstream_response_time '
                       '"$http_x_forwarded_for" $connection $connection_requests';
    
    # 访问日志
    access_log /var/log/nginx/access.log main;
    
    # ================================
    # 性能优化配置
    # ================================
    
    # 发送文件优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # 连接超时设置
    keepalive_timeout 65;
    keepalive_requests 100;
    client_header_timeout 60;
    client_body_timeout 60;
    send_timeout 60;
    
    # 缓冲区设置
    client_body_buffer_size 128k;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 32k;
    client_max_body_size 50m;  # 文件上传限制
    
    # 文件句柄缓存
    open_file_cache max=10000 inactive=60s;
    open_file_cache_valid 80s;
    open_file_cache_min_uses 1;
    open_file_cache_errors on;
    
    # ================================
    # Gzip压缩配置
    # ================================
    
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss
        application/atom+xml
        image/x-icon
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        application/x-font-ttf;
    
    # 禁用对已压缩文件的再压缩
    gzip_disable "msie6";
    
    # ================================
    # 安全配置
    # ================================
    
    # 隐藏nginx版本号
    server_tokens off;
    
    # 防止点击劫持
    add_header X-Frame-Options "SAMEORIGIN" always;
    
    # 防止MIME类型混淆攻击
    add_header X-Content-Type-Options "nosniff" always;
    
    # XSS防护
    add_header X-XSS-Protection "1; mode=block" always;
    
    # HSTS安全传输（如果启用HTTPS）
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 内容安全策略
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self'; connect-src 'self' https://mining-backend.ziven.site https://api.siliconflow.cn;" always;
    
    # 推荐人策略
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # 权限策略
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # ================================
    # 限流配置
    # ================================
    
    # 定义请求限流区域
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # 连接数限制
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # ================================
    # 缓存配置
    # ================================
    
    # 代理缓存路径
    proxy_cache_path /var/cache/nginx/proxy_cache 
                     levels=1:2 
                     keys_zone=api_cache:10m 
                     max_size=1g 
                     inactive=60m 
                     use_temp_path=off;
    
    # 临时文件配置
    proxy_temp_path /var/cache/nginx/proxy_temp;
    client_body_temp_path /var/cache/nginx/client_temp;
    fastcgi_temp_path /var/cache/nginx/fastcgi_temp;
    uwsgi_temp_path /var/cache/nginx/uwsgi_temp;
    scgi_temp_path /var/cache/nginx/scgi_temp;
    
    # ================================
    # 上游服务器配置
    # ================================
    
    # 后端API服务器组
    upstream backend_api {
        server mining-backend.ziven.site:443 max_fails=3 fail_timeout=30s;
        
        # 保持连接
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # ================================
    # 虚拟主机配置
    # ================================
    
    # 包含虚拟主机配置文件
    include /etc/nginx/conf.d/*.conf;
    
    # ================================
    # 默认服务器配置（如果没有其他配置）
    # ================================
    
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # 根目录
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # 应用限流
        limit_req zone=general burst=20 nodelay;
        limit_conn conn_limit_per_ip 20;
        
        # 字符集
        charset utf-8;
        
        # ================================
        # 静态资源优化
        # ================================
        
        # HTML文件 - 不缓存
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            
            # 应用安全头
            include /etc/nginx/security-headers.conf;
        }
        
        # 静态资源 - 长期缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # 压缩优化
            gzip_static on;
            
            # 处理CORS
            add_header Access-Control-Allow-Origin "*";
        }
        
        # ================================
        # API代理配置
        # ================================
        
        location /api/ {
            # 应用API限流
            limit_req zone=api burst=60 nodelay;
            
            # 代理到后端
            proxy_pass https://backend_api/api/;
            
            # 代理头设置
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            # 超时设置
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # 缓冲设置
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 16 8k;
            proxy_busy_buffers_size 16k;
            
            # HTTP版本
            proxy_http_version 1.1;
            
            # 缓存配置（GET请求）
            proxy_cache api_cache;
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            
            # CORS处理
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            
            # 预检请求处理
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
        }
        
        # 文件上传特殊处理
        location /api/file/upload {
            limit_req zone=upload burst=5 nodelay;
            
            # 增加上传限制
            client_max_body_size 100m;
            client_body_timeout 300s;
            
            proxy_pass https://backend_api/api/file/upload;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # 禁用缓存
            proxy_cache off;
        }
        
        # ================================
        # React Router支持
        # ================================
        
        location / {
            try_files $uri $uri/ /index.html;
            
            # 安全头
            include /etc/nginx/security-headers.conf;
        }
        
        # ================================
        # 健康检查和监控
        # ================================
        
        location /health {
            access_log off;
            return 200 '{"status":"healthy","service":"mining-frontend","timestamp":"$time_iso8601","version":"1.0.0"}';
            add_header Content-Type application/json;
        }
        
        location /nginx-status {
            stub_status on;
            access_log off;
            
            # 限制访问（仅内部网络）
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # ================================
        # 错误页面
        # ================================
        
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        # ================================
        # 特殊文件处理
        # ================================
        
        # robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log off;
        }
        
        # favicon.ico
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            expires 30d;
        }
        
        # 隐藏文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 备份文件
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}