# 矿区安全数据库前端 - Nginx配置文件
# 优化静态资源服务，API代理和缓存策略

server {
    listen 80;
    server_name localhost;
    
    # 根目录设置
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    # 安全头设置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # Gzip压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;

    # ================================
    # 静态资源缓存策略
    # ================================
    
    # HTML文件 - 不缓存，确保及时更新
    location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        
        # 安全头
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }
    
    # CSS和JS文件 - 长期缓存(有hash值)
    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # 处理CORS
        add_header Access-Control-Allow-Origin "*";
        
        # 如果文件不存在，尝试无后缀版本
        try_files $uri $uri/ @fallback;
    }
    
    # 图片和字体文件 - 长期缓存
    location ~* \.(jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public";
        
        # 处理CORS
        add_header Access-Control-Allow-Origin "*";
        
        # 图片优化
        add_header Vary "Accept-Encoding";
    }
    
    # JSON和其他数据文件
    location ~* \.(json|xml|txt)$ {
        expires 1d;
        add_header Cache-Control "public";
    }

    # ================================
    # API代理配置
    # ================================
    
    # 后端API代理
    location /api/ {
        # 代理到后端服务器
        proxy_pass https://mining-backend.ziven.site/api/;
        
        # 请求头设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时设置
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # CORS处理
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        add_header Access-Control-Max-Age 3600 always;
        
        # 处理预检请求
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
    
    # ================================
    # React Router支持
    # ================================
    
    # React Router的客户端路由支持
    location / {
        try_files $uri $uri/ /index.html;
        
        # 禁用对根路径的缓存
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
    
    # 静态资源fallback
    location @fallback {
        try_files $uri /index.html;
    }
    
    # ================================
    # 特殊路径配置
    # ================================
    
    # favicon处理
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public";
    }
    
    # robots.txt
    location = /robots.txt {
        log_not_found off;
        access_log off;
        expires 1d;
    }
    
    # 隐藏版本信息
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # ================================
    # 健康检查端点
    # ================================
    
    location /health {
        access_log off;
        return 200 '{"status":"healthy","service":"mining-frontend","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    # ================================
    # 错误页面配置
    # ================================
    
    # 自定义错误页面
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;
    
    # ================================
    # 日志配置
    # ================================
    
    # 访问日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # ================================
    # 性能优化配置
    # ================================
    
    # 文件句柄缓存
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # TCP优化
    tcp_nopush on;
    tcp_nodelay on;
    
    # 保持连接
    keepalive_timeout 65;
    keepalive_requests 100;
}